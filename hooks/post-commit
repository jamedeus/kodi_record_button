#!/bin/sh

# This script tags commits containing files that are part of the packaged
# addon, triggering a CI/CD job to package the addon and push a new release.
# The tag and commit message are also added to changelog.txt, which is then
# added to the commit.
#
# Installation: Add the following line to .git/hooks/post-commit:
# nohup hooks/post-commit >/dev/null 2>&1 &

# Skip if not on master branch
if [ "$(git branch --show-current)" != "master" ]; then
    exit
fi

# Check if addon files were included in commit
# Matches all jpg and png, all files in resources, static, and templates, files
# named addon with any extension, and all full .py filenames listed in regex
ADDON_FILES=$(git diff --name-only HEAD^ HEAD | grep -E ".(jpg|png)$|^(resources|static|templates).|^addon.|^database.py$|^flask_backend.py$|^kodi_gui.py$|^paths.py$")

# Check if changelog was included in commit
CHANGELOG=$(git diff --name-only HEAD^ HEAD | grep -E "changelog.txt")

# Only run if the commit includes addon files but NOT changelog
# Prevents an infinite loop when the commit is amended to include changelog,
# which triggers this script a second time
if [ ! -z "$ADDON_FILES" ] && [ -z "$CHANGELOG" ]; then
    # Increment most-recent tag
    LAST_TAG=$(git tag | sort -V | tail -n 1)
    NEW_TAG=$(echo $LAST_TAG | awk -F. '{$NF = $NF + 1;} 1' OFS=.)

    # Update the version number in addon.xml, add to commit
    sed -i '/<addon id="script.record.button" /s/version="[^"]*"/version="'"$NEW_TAG"'"/' addon.xml
    git add addon.xml

    # Add first line of commit message to changelog, add to commit
    COMMIT_MESSAGE=$(git log -1 --format=format:"%s")
    printf "$NEW_TAG - $COMMIT_MESSAGE\n" >> changelog.txt
    git add changelog.txt
    git commit --amend --no-edit

    # Tag new commit
    git tag $NEW_TAG
    printf "$(date -Iseconds): Tagged new commit $NEW_TAG\n" >> .git/release.log
fi
