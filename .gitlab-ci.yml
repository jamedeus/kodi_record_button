before_script:
  - docker info
  - printenv

stages:
  - test
  - build
  - release

# Run unit tests
test:
  stage: test
  tags:
    - arm64
  script:
    - pip3 install pipenv
    - export PATH=$PATH:/home/gitlab-runner/.local/bin
    - pipenv install
    - pipenv run python3.10 -m coverage run --source='flask_backend,database' -m unittest discover tests
    - pipenv run python3.10 -m coverage report -m --precision=1
  coverage: '/TOTAL.*\s+(\d+\.\d+\%)$/'

# Create installable zip
build:
  stage: build
  tags:
    - arm64
  rules:
    - changes:
        - 'addon.*'
        - 'database.py'
        - 'fanart.jpg'
        - 'flask_backend.py'
        - 'icon.png'
        - 'kodi_gui.py'
        - 'paths.py'
        - 'resources/*'
        - 'static/*'
        - 'templates/*'
        - '.gitlab-ci.yml'
  script:
    - npm install
    - python3 -c "from package_addon import zip_addon; zip_addon()"
    - mv kodi_record_button.zip kodi_record_button-v$CI_PIPELINE_IID.zip
  artifacts:
    paths:
      - kodi_record_button-v$CI_PIPELINE_IID.zip

# Push zip to gitlab as new release
release:
  stage: release
  tags:
    - arm64
  needs:
    - job: build
      artifacts: true
  rules:
    - changes:
        - 'addon.*'
        - 'database.py'
        - 'fanart.jpg'
        - 'flask_backend.py'
        - 'icon.png'
        - 'kodi_gui.py'
        - 'paths.py'
        - 'resources/*'
        - 'static/*'
        - 'templates/*'
        - '.gitlab-ci.yml'
  script:
    - echo "Creating release for $CI_PIPELINE_IID"
  release:
    name: 'Release $CI_PIPELINE_IID'
    description: 'Release $CI_PIPELINE_IID'
    tag_name: '$TAG'
    ref: '$CI_COMMIT_SHA'
    assets:
      links:
        - name: 'addon-v$CI_PIPELINE_IID.zip'
          url: '$CI_JOB_URL/artifacts/raw/kodi_record_button-v$CI_PIPELINE_IID.zip'
